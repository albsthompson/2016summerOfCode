import java.util.*;
public class Problem8{
	private static final String bigNumber = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843"
	+ "8586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557" 
	+ "6689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749"
	+ "30358907296290491560440772390713810515859307960866"
	+ "70172427121883998797908792274921901699720888093776"
	+ "65727333001053367881220235421809751254540594752243"
	+ "52584907711670556013604839586446706324415722155397"
	+ "53697817977846174064955149290862569321978468622482"
	+ "83972241375657056057490261407972968652414535100474"
	+ "82166370484403199890008895243450658541227588666881"
	+ "16427171479924442928230863465674813919123162824586"
	+ "17866458359124566529476545682848912883142607690042"
	+ "24219022671055626321111109370544217506941658960408"
	+ "07198403850962455444362981230987879927244284909188"
	+ "84580156166097919133875499200524063689912560717606"
	+ "05886116467109405077541002256983155200055935729725"
	+ "71636269561882670428252483600823257530420752963450";


	public static void main(String[] args){
		long currentLargest = 0L;
		for (int i = 0; i < bigNumber.length()-12; i++){
			long result = sumDigitsOfBigNumber(13, i);
			if (result > currentLargest){
				currentLargest = result;
			}
		}
		System.out.println("result: " + currentLargest);
	}

	private static long sumDigitsOfBigNumber(int numberToSum, int startIndex){
		System.out.println("index: " + startIndex);
		String subString = bigNumber.substring(startIndex, numberToSum + startIndex);
		System.out.println("substring: " + subString);
		List<Integer> numbersInSubString = new ArrayList<>();
		for (int i = 0; i < subString.length(); i++){
			numbersInSubString.add(Integer.valueOf(subString.substring(i, i+1)));
		}
		long summedNumber = 1L;
		for (Integer number: numbersInSubString){
			summedNumber *= number;
		}
		return summedNumber;
	}
}